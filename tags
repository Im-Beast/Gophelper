!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mateusz/go/src/Gophelper/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
0	configs/bot.json	/^        "Fun",$/;"	s	array:commands.help.categories
0	configs/bot.json	/^    "prefixes": ["go"],$/;"	s	array:prefix.prefixes
0	configs/languages/english.json	/^        "Yes!",$/;"	s	array:commands.8Ball.answers
0	configs/languages/english.json	/^    "The raccoon can fit in your ass.",$/;"	s	array:funFacts
0	configs/languages/polish.json	/^        "Jeszcze jak!",$/;"	s	array:commands.8Ball.answers
0	configs/languages/polish.json	/^    "Szop pracz może zmieścić się w twojej dupie.",$/;"	s	array:funFacts
1	configs/bot.json	/^        "Games",$/;"	s	array:commands.help.categories
1	configs/languages/english.json	/^        "Definitely!",$/;"	s	array:commands.8Ball.answers
1	configs/languages/english.json	/^    "Your snot fly at a speed of ~44 km\/h when you sneeze.",$/;"	s	array:funFacts
1	configs/languages/polish.json	/^        "Tak",$/;"	s	array:commands.8Ball.answers
1	configs/languages/polish.json	/^    "Twoje smarki jak kichasz lecą z prędkością ~44km\/h.",$/;"	s	array:funFacts
10	configs/languages/english.json	/^    "Eel-flavored ice creams are available in Japan.",$/;"	s	array:funFacts
10	configs/languages/polish.json	/^    "Lody o smaku węgorza można kupić w Japonii.",$/;"	s	array:funFacts
11	configs/languages/english.json	/^    "The world's largest pumpkin weighted more than a car.",$/;"	s	array:funFacts
11	configs/languages/polish.json	/^    "Największa na świecie dynia ważyła więcej niż samochód.",$/;"	s	array:funFacts
12	configs/languages/english.json	/^    "There are more liquor stores in **Bydgoszcz** than in the rest of Norway."$/;"	s	array:funFacts
12	configs/languages/polish.json	/^    "W Bydgoszczy jest więcej sklepów monopolowych niż w całej Norwegii.",$/;"	s	array:funFacts
13	configs/languages/polish.json	/^    "Niektóre plemiona tubylcze nie mają kontaktu z nowoczesną cywilizacją."$/;"	s	array:funFacts
2	configs/bot.json	/^        "Moderation",$/;"	s	array:commands.help.categories
2	configs/languages/english.json	/^        "Without any problems",$/;"	s	array:commands.8Ball.answers
2	configs/languages/english.json	/^    "The United States has no official language.",$/;"	s	array:funFacts
2	configs/languages/polish.json	/^        "Bez kitu",$/;"	s	array:commands.8Ball.answers
2	configs/languages/polish.json	/^    "Stany Zjednoczone nie posiadają języka urzędowego.",$/;"	s	array:funFacts
3	configs/bot.json	/^        "Miscellaneous",$/;"	s	array:commands.help.categories
3	configs/languages/english.json	/^        "For sure!",$/;"	s	array:commands.8Ball.answers
3	configs/languages/english.json	/^    "A cockroach can live for several weeks without a head. It will eventually starve to death."/;"	s	array:funFacts
3	configs/languages/polish.json	/^        "Na serio!",$/;"	s	array:commands.8Ball.answers
3	configs/languages/polish.json	/^    "Karaluch może żyć kilka tygodni bez głowy. W końcu umrze z głodu.",$/;"	s	array:funFacts
4	configs/bot.json	/^        "Bot config"$/;"	s	array:commands.help.categories
4	configs/languages/english.json	/^        "There's no way.",$/;"	s	array:commands.8Ball.answers
4	configs/languages/english.json	/^    "Galileo's middle finger is stored in the Science Museum in Florence.",$/;"	s	array:funFacts
4	configs/languages/polish.json	/^        "Nie ma szans",$/;"	s	array:commands.8Ball.answers
4	configs/languages/polish.json	/^    "Środkowy palec Galileusza jest przechowywany w Muzeum Nauki we Florencji.",$/;"	s	array:funFacts
5	configs/languages/english.json	/^        "Nah, it wont work",$/;"	s	array:commands.8Ball.answers
5	configs/languages/english.json	/^    "The Spanish word „esposas” means both „handcuffs” and „wifes”.",$/;"	s	array:funFacts
5	configs/languages/polish.json	/^        "A czy papież sra w lesie?",$/;"	s	array:commands.8Ball.answers
5	configs/languages/polish.json	/^    "Hiszpańskie słowo „esposas” oznacza zarówno „kajdanki”, jak i „żony”.",$/;"	s	array:funFacts
6	configs/languages/english.json	/^        "I don't think so",$/;"	s	array:commands.8Ball.answers
6	configs/languages/english.json	/^    "There are about 4 „billiards of billiards” bacteria on Earth.",$/;"	s	array:funFacts
6	configs/languages/polish.json	/^        "Mówie ci, to nie wyjdzie",$/;"	s	array:commands.8Ball.answers
6	configs/languages/polish.json	/^    "Na Ziemi jest około 4 „biliardy biliardów” bakterii.",$/;"	s	array:funFacts
7	configs/languages/english.json	/^        "Maybe?",$/;"	s	array:commands.8Ball.answers
7	configs/languages/english.json	/^    "Oceans contain nearly 200,000 different types of viruses.",$/;"	s	array:funFacts
7	configs/languages/polish.json	/^        "Nieno raczej nie",$/;"	s	array:commands.8Ball.answers
7	configs/languages/polish.json	/^    "Oceany zawierają prawie 200 tysięcy różnych rodzajów wirusów.",$/;"	s	array:funFacts
8	configs/languages/english.json	/^        "Who knows",$/;"	s	array:commands.8Ball.answers
8	configs/languages/english.json	/^    "There are about 2,000 storms happening on Earth at any given moment.",$/;"	s	array:funFacts
8	configs/languages/polish.json	/^        "Może",$/;"	s	array:commands.8Ball.answers
8	configs/languages/polish.json	/^    "W każdej chwili na Ziemi ma miejsce około 2000 burz.",$/;"	s	array:funFacts
8Ball	configs/languages/english.json	/^    "8Ball": {$/;"	o	object:commands
8Ball	configs/languages/polish.json	/^    "8Ball": {$/;"	o	object:commands
9	configs/languages/english.json	/^        "I dont know, ask someone else"$/;"	s	array:commands.8Ball.answers
9	configs/languages/english.json	/^    "Over a million planets of the Earth would fit into one sun.",$/;"	s	array:funFacts
9	configs/languages/polish.json	/^        "Kij wie"$/;"	s	array:commands.8Ball.answers
9	configs/languages/polish.json	/^    "Ponad milion planet Ziemi zmieściłby się w jednym Słońcu.",$/;"	s	array:funFacts
AddCommand	internal/router.go	/^func (router *Router) AddCommand(command *Command) {$/;"	f	struct:gophelper.Router
AddMiddleware	internal/router.go	/^func (router *Router) AddMiddleware(middleware Middleware) {$/;"	f	struct:gophelper.Router
AddRouterMiddleware	internal/router.go	/^func (router *Router) AddRouterMiddleware(event string, middleware Middleware) {$/;"	f	struct:gophelper.Router
Aliases	internal/category.go	/^	Aliases       []string$/;"	m	struct:gophelper.Category	typeref:typename:[]string
Aliases	internal/command.go	/^	Aliases       []string$/;"	m	struct:gophelper.Command	typeref:typename:[]string
Answers	internal/config.go	/^		Answers            []string `json:"answers,omitempty"`$/;"	m	struct:gophelper.EightBallCommand	typeref:typename:[]string
Arguments	internal/context.go	/^	Arguments []string$/;"	m	struct:gophelper.CommandContext	typeref:typename:[]string
Big	commands/pinterest.go	/^	Big      string$/;"	m	struct:commands.Sizes	typeref:typename:string
Bot config	configs/languages/english.json	/^    "Bot config": {$/;"	o	object:categories
Bot config	configs/languages/polish.json	/^    "Bot config": {$/;"	o	object:categories
CATEGORIES	internal/category.go	/^	CATEGORIES = []*Category{$/;"	v	package:gophelper
CATEGORY_CONFIG	internal/category.go	/^	CATEGORY_CONFIG = &Category{$/;"	v	package:gophelper
CATEGORY_FUN	internal/category.go	/^	CATEGORY_FUN = &Category{$/;"	v	package:gophelper
CATEGORY_GAMES	internal/category.go	/^	CATEGORY_GAMES = &Category{$/;"	v	package:gophelper
CATEGORY_MISC	internal/category.go	/^	CATEGORY_MISC = &Category{$/;"	v	package:gophelper
CATEGORY_MOD	internal/category.go	/^	CATEGORY_MOD = &Category{$/;"	v	package:gophelper
CaseSensitive	internal/command.go	/^	CaseSensitive bool$/;"	m	struct:gophelper.Command	typeref:typename:bool
CaseSensitive	internal/router.go	/^	CaseSensitive bool$/;"	m	struct:gophelper.Router	typeref:typename:bool
Categories	internal/config.go	/^		Categories map[string]CategoryConfig `json:"categories"`$/;"	m	struct:gophelper.LanguageConfig	typeref:typename:map[string]CategoryConfig
Categories	internal/router.go	/^	Categories []*Category$/;"	m	struct:gophelper.Router	typeref:typename:[]*Category
Category	internal/category.go	/^type Category struct {$/;"	s	package:gophelper
Category	internal/command.go	/^	Category *Category$/;"	m	struct:gophelper.Command	typeref:typename:*Category
CategoryConfig	internal/config.go	/^	CategoryConfig struct {$/;"	s	package:gophelper
ClampInt	utils/utils.go	/^func ClampInt(num int, min int, max int) int {$/;"	f	package:utils	typeref:typename:int
CmdCountMap	middleware/rateLimiter.go	/^	CmdCountMap    map[string]int$/;"	m	struct:middleware.RateLimiter	typeref:typename:map[string]int
Command	internal/command.go	/^type Command struct {$/;"	s	package:gophelper
Command	internal/context.go	/^	Command   *Command$/;"	m	struct:gophelper.CommandContext	typeref:typename:*Command
CommandConfig	internal/config.go	/^	CommandConfig struct {$/;"	s	package:gophelper
CommandContext	internal/context.go	/^type CommandContext struct {$/;"	s	package:gophelper
Commands	README.md	/^## Commands$/;"	s	chapter:Gophelper
Commands	internal/config.go	/^		Commands   map[string]CommandConfig  `json:"commands"`$/;"	m	struct:gophelper.LanguageConfig	typeref:typename:map[string]CommandConfig
Commands	internal/config.go	/^		Commands struct {$/;"	m	struct:gophelper.Config	typeref:typename:struct { Help struct { Categories []string `json:"categories"`; } `json:"help"`; }
Commands	internal/router.go	/^	Commands []*Command$/;"	m	struct:gophelper.Router	typeref:typename:[]*Command
Config	internal/config.go	/^	Config struct {$/;"	s	package:gophelper
Config	internal/router.go	/^	Config *Config$/;"	m	struct:gophelper.Router	typeref:typename:*Config
Config files	README.md	/^## Config files$/;"	s	chapter:Gophelper
CooldownMap	middleware/rateLimiter.go	/^	CooldownMap    map[string]int64$/;"	m	struct:middleware.RateLimiter	typeref:typename:map[string]int64
CreationDate	internal/config.go	/^		CreationDate string `json:"creationDate,omitempty"`$/;"	m	struct:gophelper.StatsCommand	typeref:typename:string
Credits	README.md	/^## Credits$/;"	s	chapter:Gophelper
Description	commands/pinterest.go	/^	Description string `json:"description"`$/;"	m	struct:commands.PinterestResult	typeref:typename:string
Description	configs/languages/english.json	/^      "Description": "Bot config related commands"$/;"	s	object:categories.Bot config
Description	configs/languages/english.json	/^      "Description": "Gang gang"$/;"	s	object:categories.Moderation
Description	configs/languages/english.json	/^      "Description": "Haha funni"$/;"	s	object:categories.Fun
Description	configs/languages/english.json	/^      "Description": "Other stuff"$/;"	s	object:categories.Miscellaneous
Description	configs/languages/english.json	/^      "Description": "Simple games vs bot"$/;"	s	object:categories.Games
Description	configs/languages/polish.json	/^      "Description": "Geng geng"$/;"	s	object:categories.Moderation
Description	configs/languages/polish.json	/^      "Description": "Heh, śmieszne"$/;"	s	object:categories.Fun
Description	configs/languages/polish.json	/^      "Description": "Inne rzeczy"$/;"	s	object:categories.Miscellaneous
Description	configs/languages/polish.json	/^      "Description": "Komendy związane z konfiguracją bota"$/;"	s	object:categories.Bot config
Description	configs/languages/polish.json	/^      "Description": "Proste gry przeciwko botowi"$/;"	s	object:categories.Games
Description	internal/category.go	/^	Description   string$/;"	m	struct:gophelper.Category	typeref:typename:string
Description	internal/command.go	/^	Description  string$/;"	m	struct:gophelper.Command	typeref:typename:string
Description	internal/config.go	/^		Description string `json:"description"`$/;"	m	struct:gophelper.CategoryConfig	typeref:typename:string
Description	internal/config.go	/^		Description string `json:"description,omitempty"`$/;"	m	struct:gophelper.CommandConfig	typeref:typename:string
Doggie	commands/doggie.go	/^var Doggie = &gophelper.Command{$/;"	v	package:commands
Doggie	configs/languages/english.json	/^    "Doggie": {$/;"	o	object:commands
Doggie	configs/languages/polish.json	/^    "Doggie": {$/;"	o	object:commands
Duration	middleware/rateLimiter.go	/^	Duration time.Duration$/;"	m	struct:middleware.RateLimit	typeref:typename:time.Duration
EightBall	commands/8ball.go	/^var EightBall = &gophelper.Command{$/;"	v	package:commands
EightBallCommand	internal/config.go	/^		EightBallCommand$/;"	M	struct:gophelper.CommandConfig	typeref:typename:EightBallCommand
EightBallCommand	internal/config.go	/^	EightBallCommand struct {$/;"	s	package:gophelper
Embed	internal/config.go	/^		Embed struct {$/;"	m	struct:gophelper.HelpCommand	typeref:typename:struct { Main struct { Title string `json:"title"`; Description string `json:"description"`; } `json:"main"`; CategoryTitle string `json:"categoryTitle"`; Name string `json:"name"`; NoName string `json:"noName"`; Description string `json:"description"`; NoDescription string `json:"noDescription"`; Usage string `json:"usage"`; Aliases string `json:"aliases"`; NoAliases string `json:"noAliases"`; }
Errors	internal/config.go	/^		Errors struct {$/;"	m	struct:gophelper.LanguageConfig	typeref:typename:struct { MessageSend string `json:"messageSend"`; TooFewPermissions string `json:"tooFewPermissions"`; NSFWOnly string `json:"nsfwOnly"`; RateLimit string `json:"rateLimit"`; CommandNotFound struct { Title string `json:"title"`; Message string `json:"message"`; } `json:"commandNotFound,omitempty"`; CommandInvalidArguments struct { Title string `json:"title"`; Message string `json:"message"`; } `json:"invalidCommandArguments,omitempty"`; NoResultsFound struct { Title string `json:"title"`; Message string
Event	internal/context.go	/^	Event *discordgo.MessageCreate$/;"	m	struct:gophelper.CommandContext	typeref:typename:*discordgo.MessageCreate
Features	README.md	/^## Features$/;"	s	chapter:Gophelper
Fun	configs/languages/english.json	/^    "Fun": {$/;"	o	object:categories
Fun	configs/languages/polish.json	/^    "Fun": {$/;"	o	object:categories
FunFacts	internal/config.go	/^		FunFacts   []string                  `json:"funFacts"`$/;"	m	struct:gophelper.LanguageConfig	typeref:typename:[]string
Games	configs/languages/english.json	/^    "Games": {$/;"	o	object:categories
Games	configs/languages/polish.json	/^    "Games": {$/;"	o	object:categories
GetStringVal	utils/utils.go	/^func GetStringVal(str string, notSet string) string {$/;"	f	package:utils	typeref:typename:string
GetWebpageContent	utils/utils.go	/^func GetWebpageContent(url string) []byte {$/;"	f	package:utils	typeref:typename:[]byte
GiveCommand	internal/config.go	/^		GiveCommand$/;"	M	struct:gophelper.CommandConfig	typeref:typename:GiveCommand
GiveCommand	internal/config.go	/^	GiveCommand struct {$/;"	s	package:gophelper
Gophelper	README.md	/^# Gophelper$/;"	c
Handler	internal/command.go	/^	Handler func(*CommandContext)$/;"	m	struct:gophelper.Command	typeref:typename:func(*CommandContext)
Help	commands/help.go	/^var Help = &gophelper.Command{$/;"	v	package:commands
Help	configs/languages/english.json	/^    "Help": {$/;"	o	object:commands
Help	configs/languages/polish.json	/^    "Help": {$/;"	o	object:commands
HelpCommand	internal/config.go	/^		HelpCommand$/;"	M	struct:gophelper.CommandConfig	typeref:typename:HelpCommand
HelpCommand	internal/config.go	/^	HelpCommand struct {$/;"	s	package:gophelper
How do I install this	README.md	/^## How do I install this$/;"	s	chapter:Gophelper
Hug	commands/hug.go	/^var Hug = &gophelper.Command{$/;"	v	package:commands
Hug	configs/languages/english.json	/^    "Hug": {$/;"	o	object:commands
Hug	configs/languages/polish.json	/^    "Hug": {$/;"	o	object:commands
Huge	commands/pinterest.go	/^	Huge     string$/;"	m	struct:commands.Sizes	typeref:typename:string
ID	internal/command.go	/^	ID string$/;"	m	struct:gophelper.Command	typeref:typename:string
ImageResponseHandler	commands/generics/imageResponse.go	/^func ImageResponseHandler(context *gophelper.CommandContext, cmdName string, responses []string)/;"	f	package:generics
Images	commands/pinterest.go	/^	Images map[string]struct {$/;"	m	struct:commands.PinterestResult	typeref:typename:map[string]struct { Height int `json:"height"`; Width int `json:"width"`; Url string `json:"url"`; }
Init	internal/router.go	/^func (router *Router) Init(session *discordgo.Session) {$/;"	f	struct:gophelper.Router
Initialized	middleware/rateLimiter.go	/^	Initialized    bool$/;"	m	struct:middleware.RateLimiter	typeref:typename:bool
Introduction	README.md	/^## Introduction$/;"	s	chapter:Gophelper
IsMention	utils/utils.go	/^func IsMention(str string) bool {$/;"	f	package:utils	typeref:typename:bool
IsNSFW	utils/utils.go	/^func IsNSFW(session *discordgo.Session, channelID string) bool {$/;"	f	package:utils	typeref:typename:bool
IsNumber	utils/utils.go	/^func IsNumber(str string) bool {$/;"	f	package:utils	typeref:typename:bool
JoinDate	internal/config.go	/^		JoinDate     string `json:"joinDate,omitempty"`$/;"	m	struct:gophelper.StatsCommand	typeref:typename:string
Kiss	commands/kiss.go	/^var Kiss = &gophelper.Command{$/;"	v	package:commands
Kiss	configs/languages/english.json	/^    "Kiss": {$/;"	o	object:commands
Kiss	configs/languages/polish.json	/^    "Kiss": {$/;"	o	object:commands
Kitty	commands/kitty.go	/^var Kitty = &gophelper.Command{$/;"	v	package:commands
Kitty	configs/languages/english.json	/^    "Kitty": {$/;"	o	object:commands
Kitty	configs/languages/polish.json	/^    "Kitty": {$/;"	o	object:commands
Language	internal/config.go	/^		Language LanguageConfig `json:"language,omitempty"`$/;"	m	struct:gophelper.Config	typeref:typename:LanguageConfig
LanguageConfig	internal/config.go	/^	LanguageConfig struct {$/;"	s	package:gophelper
LanguageSettings	internal/command.go	/^	LanguageSettings CommandConfig$/;"	m	struct:gophelper.Command	typeref:typename:CommandConfig
LanguageSwitcher	commands/language.go	/^var LanguageSwitcher = &gophelper.Command{$/;"	v	package:commands
LastRequestMap	middleware/rateLimiter.go	/^	LastRequestMap map[string]int64$/;"	m	struct:middleware.RateLimiter	typeref:typename:map[string]int64
Limit	middleware/rateLimiter.go	/^	Limit    int$/;"	m	struct:middleware.RateLimit	typeref:typename:int
LoadConfig	internal/config.go	/^func LoadConfig(configPath string, languageConfigPath string) *Config {$/;"	f	package:gophelper	typeref:typename:*Config
LoadLanguage	internal/config.go	/^func (config *Config) LoadLanguage(languageConfigPath string) error {$/;"	f	struct:gophelper.Config	typeref:typename:error
Matches	utils/utils.go	/^func Matches(str string, str2 string, caseSensitive bool) bool {$/;"	f	package:utils	typeref:typename:bool
MatchesPrefix	utils/utils.go	/^func MatchesPrefix(str string, prefix string, caseSensitive bool) bool {$/;"	f	package:utils	typeref:typename:bool
Media	README.md	/^## Media$/;"	s	chapter:Gophelper
Medium	commands/pinterest.go	/^	Medium   string$/;"	m	struct:commands.Sizes	typeref:typename:string
MentionToID	utils/utils.go	/^func MentionToID(mention string) string {$/;"	f	package:utils	typeref:typename:string
Middleware	internal/middleware.go	/^type Middleware func(*CommandContext) (bool, func(*CommandContext))$/;"	t	package:gophelper	typeref:typename:func(*CommandContext) (bool, func(*CommandContext))
Middleware	internal/router.go	/^	Middleware []Middleware$/;"	m	struct:gophelper.Router	typeref:typename:[]Middleware
Miscellaneous	configs/languages/english.json	/^    "Miscellaneous": {$/;"	o	object:categories
Miscellaneous	configs/languages/polish.json	/^    "Miscellaneous": {$/;"	o	object:categories
Moderation	configs/languages/english.json	/^    "Moderation": {$/;"	o	object:categories
Moderation	configs/languages/polish.json	/^    "Moderation": {$/;"	o	object:categories
NSFWOnly	internal/command.go	/^	NSFWOnly bool$/;"	m	struct:gophelper.Command	typeref:typename:bool
Name	internal/category.go	/^	Name          string$/;"	m	struct:gophelper.Category	typeref:typename:string
Name	internal/command.go	/^	Name string$/;"	m	struct:gophelper.Command	typeref:typename:string
NeededPermissions	internal/command.go	/^	NeededPermissions int64$/;"	m	struct:gophelper.Command	typeref:typename:int64
NoArgumentsMessage	internal/config.go	/^		NoArgumentsMessage string   `json:"noArgumentsMessage,omitempty"`$/;"	m	struct:gophelper.EightBallCommand	typeref:typename:string
Original	commands/pinterest.go	/^	Original string$/;"	m	struct:commands.Sizes	typeref:typename:string
Page	internal/config.go	/^		Page string `json:"page,omitempty"`$/;"	m	struct:gophelper.HelpCommand	typeref:typename:string
PermissionCheckMiddleware	middleware/permissionChecker.go	/^func PermissionCheckMiddleware(context *gophelper.CommandContext) (bool, func(*gophelper.Command/;"	f	package:middleware	typeref:typename:(bool, func(*gophelper.CommandContext))
Pet	commands/pet.go	/^var Pet = &gophelper.Command{$/;"	v	package:commands
Pet	configs/languages/english.json	/^    "Pet": {$/;"	o	object:commands
Pet	configs/languages/polish.json	/^    "Pet": {$/;"	o	object:commands
Ping	commands/ping.go	/^var Ping = &gophelper.Command{$/;"	v	package:commands
Ping	configs/languages/english.json	/^    "Ping": {$/;"	o	object:commands
Ping	configs/languages/polish.json	/^    "Ping": {$/;"	o	object:commands
Pinner	commands/pinterest.go	/^	Pinner struct {$/;"	m	struct:commands.PinterestResult	typeref:typename:struct { FullName string `json:"full_name"`; Username string `json:"username"`; }
Pinterest	commands/pinterest.go	/^var Pinterest = &gophelper.Command{$/;"	v	package:commands
PinterestResponse	commands/pinterest.go	/^type PinterestResponse struct {$/;"	s	package:commands
PinterestResult	commands/pinterest.go	/^type PinterestResult struct {$/;"	s	package:commands
PinterestSizes	commands/pinterest.go	/^var PinterestSizes = &Sizes{$/;"	v	package:commands
Prefix	internal/config.go	/^		Prefix struct {$/;"	m	struct:gophelper.Config	typeref:typename:struct { Value []string `json:"prefixes"`; CaseSensitive bool `json:"caseSensitive"`; }
Prefixes	internal/router.go	/^	Prefixes      []string$/;"	m	struct:gophelper.Router	typeref:typename:[]string
Pulls, forks and issues	README.md	/^## Pulls, forks and issues$/;"	s	chapter:Gophelper
RandomStringElement	utils/utils.go	/^func RandomStringElement(array []string) string {$/;"	f	package:utils	typeref:typename:string
RateLimit	internal/command.go	/^	RateLimit struct {$/;"	m	struct:gophelper.Command	typeref:typename:struct { Limit int; Duration time.Duration; }
RateLimit	middleware/rateLimiter.go	/^type RateLimit struct {$/;"	s	package:middleware
RateLimiter	middleware/rateLimiter.go	/^type RateLimiter struct {$/;"	s	package:middleware
RateLimiterMiddleware	middleware/rateLimiter.go	/^func RateLimiterMiddleware(context *gophelper.CommandContext) (bool, func(*gophelper.CommandCont/;"	f	package:middleware	typeref:typename:(bool, func(*gophelper.CommandContext))
ReactionEmoji	internal/category.go	/^	ReactionEmoji string$/;"	m	struct:gophelper.Category	typeref:typename:string
RefreshCategories	internal/router.go	/^func (router *Router) RefreshCategories() {$/;"	f	struct:gophelper.Router
RefreshCommand	internal/router.go	/^func (router *Router) RefreshCommand(command *Command) {$/;"	f	struct:gophelper.Router
RefreshCommands	internal/router.go	/^func (router *Router) RefreshCommands() {$/;"	f	struct:gophelper.Router
RemoveCommand	internal/router.go	/^func (router *Router) RemoveCommand(command *Command) {$/;"	f	struct:gophelper.Router
ResourceResponse	commands/pinterest.go	/^	ResourceResponse struct {$/;"	m	struct:commands.PinterestResponse	typeref:typename:struct { Data struct { Results []PinterestResult `json:"results"`; } `json:"data"`; }
Response	internal/config.go	/^		Response struct {$/;"	m	struct:gophelper.GiveCommand	typeref:typename:struct { Mention string `json:"mention"`; NonMention string `json:"nonMention"`; }
RichSummary	commands/pinterest.go	/^	RichSummary struct {$/;"	m	struct:commands.PinterestResult	typeref:typename:struct { URL string `json:"url"`; DisplayName string `json:"display_name"`; }
Router	internal/context.go	/^	Router  *Router$/;"	m	struct:gophelper.CommandContext	typeref:typename:*Router
Router	internal/router.go	/^type Router struct {$/;"	s	package:gophelper
Session	internal/context.go	/^	Session *discordgo.Session$/;"	m	struct:gophelper.CommandContext	typeref:typename:*discordgo.Session
Sizes	commands/pinterest.go	/^type Sizes struct {$/;"	s	package:commands
Small	commands/pinterest.go	/^	Small    string$/;"	m	struct:commands.Sizes	typeref:typename:string
Stats	commands/stats.go	/^var Stats = &gophelper.Command{$/;"	v	package:commands
Stats	configs/languages/english.json	/^    "Stats": {$/;"	o	object:commands
Stats	configs/languages/polish.json	/^    "Stats": {$/;"	o	object:commands
StatsCommand	internal/config.go	/^		StatsCommand$/;"	M	struct:gophelper.CommandConfig	typeref:typename:StatsCommand
StatsCommand	internal/config.go	/^	StatsCommand struct {$/;"	s	package:gophelper
StringToCategory	internal/category.go	/^func StringToCategory(strCategory string) (*Category, error) {$/;"	f	package:gophelper	typeref:typename:(*Category, error)
StringToInt	utils/utils.go	/^func StringToInt(str string) int {$/;"	f	package:utils	typeref:typename:int
Tiny	commands/pinterest.go	/^	Tiny     string$/;"	m	struct:commands.Sizes	typeref:typename:string
Title	internal/config.go	/^		Title        string `json:"title,omitempty"`$/;"	m	struct:gophelper.StatsCommand	typeref:typename:string
Usage	internal/command.go	/^	Usage        string$/;"	m	struct:gophelper.Command	typeref:typename:string
UsageOnError	internal/command.go	/^	UsageOnError bool$/;"	m	struct:gophelper.Command	typeref:typename:bool
UserNotFound	internal/config.go	/^		UserNotFound string `json:"userNotFound,omitempty"`$/;"	m	struct:gophelper.StatsCommand	typeref:typename:string
Waifu	commands/waifu.go	/^var Waifu = &gophelper.Command{$/;"	v	package:commands
Waifu	configs/languages/english.json	/^    "Waifu": {$/;"	o	object:commands
Waifu	configs/languages/polish.json	/^    "Waifu": {$/;"	o	object:commands
aliases	configs/languages/english.json	/^        "aliases": "Aliases",$/;"	s	object:commands.Help.embed
aliases	configs/languages/polish.json	/^        "aliases": "Aliasy",$/;"	s	object:commands.Help.embed
answers	configs/languages/english.json	/^      "answers": [$/;"	a	object:commands.8Ball
answers	configs/languages/polish.json	/^      "answers": [$/;"	a	object:commands.8Ball
cachedCategoryPages	commands/help.go	/^var cachedCategoryPages map[*gophelper.Category][]*discordgo.MessageEmbed$/;"	v	package:commands	typeref:typename:map[*gophelper.Category][]*discordgo.MessageEmbed
cachedMainHelp	commands/help.go	/^var cachedMainHelp *discordgo.MessageEmbed$/;"	v	package:commands	typeref:typename:*discordgo.MessageEmbed
caseSensitive	configs/bot.json	/^    "caseSensitive": false$/;"	b	object:prefix
categories	configs/bot.json	/^      "categories": [$/;"	a	object:commands.help
categories	configs/languages/english.json	/^  "categories": {$/;"	o
categories	configs/languages/polish.json	/^  "categories": {$/;"	o
categoryTitle	configs/languages/english.json	/^        "categoryTitle": "Help for %s category",$/;"	s	object:commands.Help.embed
categoryTitle	configs/languages/polish.json	/^        "categoryTitle": "Pomoc dla kategorii %s",$/;"	s	object:commands.Help.embed
commandNotFound	configs/languages/english.json	/^    "commandNotFound": {$/;"	o	object:errors
commandNotFound	configs/languages/polish.json	/^    "commandNotFound": {$/;"	o	object:errors
commands	commands/8ball.go	/^package commands$/;"	p
commands	commands/doggie.go	/^package commands$/;"	p
commands	commands/help.go	/^package commands$/;"	p
commands	commands/hug.go	/^package commands$/;"	p
commands	commands/kiss.go	/^package commands$/;"	p
commands	commands/kitty.go	/^package commands$/;"	p
commands	commands/language.go	/^package commands$/;"	p
commands	commands/pet.go	/^package commands$/;"	p
commands	commands/ping.go	/^package commands$/;"	p
commands	commands/pinterest.go	/^package commands$/;"	p
commands	commands/stats.go	/^package commands$/;"	p
commands	commands/waifu.go	/^package commands$/;"	p
commands	configs/bot.json	/^  "commands": {$/;"	o
commands	configs/languages/english.json	/^  "commands": {$/;"	o
commands	configs/languages/polish.json	/^  "commands": {$/;"	o
creationDate	configs/languages/english.json	/^      "creationDate": "Account creation date",$/;"	s	object:commands.Stats
creationDate	configs/languages/polish.json	/^      "creationDate": "Data założenia konta",$/;"	s	object:commands.Stats
description	configs/languages/english.json	/^          "description": "Use `help [category]` or press adequate button to show help list for g/;"	s	object:commands.Help.embed.main
description	configs/languages/english.json	/^        "description": "Description",$/;"	s	object:commands.Help.embed
description	configs/languages/english.json	/^      "description": "Cute doggies",$/;"	s	object:commands.Doggie
description	configs/languages/english.json	/^      "description": "Get some help",$/;"	s	object:commands.Help
description	configs/languages/english.json	/^      "description": "Gives you information about user",$/;"	s	object:commands.Stats
description	configs/languages/english.json	/^      "description": "Head patting",$/;"	s	object:commands.Pet
description	configs/languages/english.json	/^      "description": "Hugs",$/;"	s	object:commands.Hug
description	configs/languages/english.json	/^      "description": "I'll tell you truth",$/;"	s	object:commands.8Ball
description	configs/languages/english.json	/^      "description": "Just pong!"$/;"	s	object:commands.Ping
description	configs/languages/english.json	/^      "description": "Kisses :*",$/;"	s	object:commands.Kiss
description	configs/languages/english.json	/^      "description": "Small cuties",$/;"	s	object:commands.Kitty
description	configs/languages/english.json	/^      "description": "Some weird anime girls",$/;"	s	object:commands.Waifu
description	configs/languages/english.json	/^      "description": "Unfortunately no results have been found :("$/;"	s	object:errors.noResultsFound
description	configs/languages/polish.json	/^          "description": "Użyj `help [kategoria]` lub naciśnij odpowiednie guziki, żeby pokaz/;"	s	object:commands.Help.embed.main
description	configs/languages/polish.json	/^        "description": "Opis",$/;"	s	object:commands.Help.embed
description	configs/languages/polish.json	/^      "description": "Całusy",$/;"	s	object:commands.Kiss
description	configs/languages/polish.json	/^      "description": "Ciapanie po główce",$/;"	s	object:commands.Pet
description	configs/languages/polish.json	/^      "description": "Daj sobie pomóc",$/;"	s	object:commands.Help
description	configs/languages/polish.json	/^      "description": "Daje ci informacje o użytkowniku",$/;"	s	object:commands.Stats
description	configs/languages/polish.json	/^      "description": "Jakieś dziwne anime dziewczynki",$/;"	s	object:commands.Waifu
description	configs/languages/polish.json	/^      "description": "Niestety nie znaleziono żadnych wyników :("$/;"	s	object:errors.noResultsFound
description	configs/languages/polish.json	/^      "description": "Po prostu pong!"$/;"	s	object:commands.Ping
description	configs/languages/polish.json	/^      "description": "Powiem ci prawdę",$/;"	s	object:commands.8Ball
description	configs/languages/polish.json	/^      "description": "Przytulasy",$/;"	s	object:commands.Hug
description	configs/languages/polish.json	/^      "description": "Słodkie kotki",$/;"	s	object:commands.Kitty
description	configs/languages/polish.json	/^      "description": "Słodkie pieski",$/;"	s	object:commands.Doggie
doggies	commands/doggie.go	/^var doggies = []string{"https:\/\/www.randomdoggiegenerator.com\/randomdoggie.php"}$/;"	v	package:commands
embed	configs/languages/english.json	/^      "embed": {$/;"	o	object:commands.Help
embed	configs/languages/polish.json	/^      "embed": {$/;"	o	object:commands.Help
errors	configs/languages/english.json	/^  "errors": {$/;"	o
errors	configs/languages/polish.json	/^  "errors": {$/;"	o
funFacts	configs/languages/english.json	/^  "funFacts": [$/;"	a
funFacts	configs/languages/polish.json	/^  "funFacts": [$/;"	a
generics	commands/doggie.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
generics	commands/generics/imageResponse.go	/^package generics$/;"	p
generics	commands/hug.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
generics	commands/kiss.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
generics	commands/kitty.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
generics	commands/pet.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
generics	commands/waifu.go	/^	generics "github.com\/Im-Beast\/Gophelper\/commands\/generics"$/;"	P	package:github.com/Im-Beast/Gophelper/commands/generics
getCategoryPages	commands/help.go	/^func getCategoryPages(router *gophelper.Router, langCfg *gophelper.LanguageConfig) map[*gophelpe/;"	f	package:commands	typeref:typename:map[*gophelper.Category][]*discordgo.MessageEmbed
getCommandHelp	commands/help.go	/^func getCommandHelp(cmd *gophelper.Command, langCfg *gophelper.LanguageConfig) *discordgo.Messag/;"	f	package:commands	typeref:typename:*discordgo.MessageEmbed
getMainHelp	commands/help.go	/^func getMainHelp(categories []*gophelper.Category, lang *gophelper.LanguageConfig) *discordgo.Me/;"	f	package:commands	typeref:typename:*discordgo.MessageEmbed
getPinterestQuery	commands/pinterest.go	/^func getPinterestQuery(query string) *PinterestResponse {$/;"	f	package:commands	typeref:typename:*PinterestResponse
getStringCommandHelp	commands/help.go	/^func getStringCommandHelp(strCmd string, router *gophelper.Router, langCfg *gophelper.LanguageCo/;"	f	package:commands	typeref:typename:(*discordgo.MessageEmbed, error)
gophelper	commands/8ball.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/doggie.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/generics/imageResponse.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/help.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/hug.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/kiss.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/kitty.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/language.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/pet.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/ping.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/pinterest.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/stats.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	commands/waifu.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	internal/category.go	/^package gophelper$/;"	p
gophelper	internal/command.go	/^package gophelper$/;"	p
gophelper	internal/config.go	/^package gophelper$/;"	p
gophelper	internal/context.go	/^package gophelper$/;"	p
gophelper	internal/middleware.go	/^package gophelper$/;"	p
gophelper	internal/router.go	/^package gophelper$/;"	p
gophelper	main.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	middleware/permissionChecker.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
gophelper	middleware/rateLimiter.go	/^	gophelper "github.com\/Im-Beast\/Gophelper\/internal"$/;"	P	package:github.com/Im-Beast/Gophelper/internal
handleCategoryPageReactions	commands/help.go	/^func handleCategoryPageReactions(session *discordgo.Session, router *gophelper.Router, origEvent/;"	f	package:commands
handleMainPageReactions	commands/help.go	/^func handleMainPageReactions(session *discordgo.Session, router *gophelper.Router, origEvent *di/;"	f	package:commands
handler	internal/router.go	/^func (router *Router) handler(session *discordgo.Session, event *discordgo.MessageCreate) {$/;"	f	struct:gophelper.Router
help	configs/bot.json	/^    "help": {$/;"	o	object:commands
hugs	commands/hug.go	/^var hugs = []string{$/;"	v	package:commands
id	configs/languages/english.json	/^      "id": "",$/;"	s	object:commands.8Ball
invalidCommandArguments	configs/languages/english.json	/^    "invalidCommandArguments": {$/;"	o	object:errors
invalidCommandArguments	configs/languages/polish.json	/^    "invalidCommandArguments": {$/;"	o	object:errors
joinDate	configs/languages/english.json	/^      "joinDate": "Server join date",$/;"	s	object:commands.Stats
joinDate	configs/languages/polish.json	/^      "joinDate": "Data dołączenia na serwer",$/;"	s	object:commands.Stats
kisses	commands/kiss.go	/^var kisses = []string{$/;"	v	package:commands
kitties	commands/kitty.go	/^var kitties = []string{"http:\/\/www.randomkittengenerator.com\/cats\/rotator.php"}$/;"	v	package:commands
main	configs/languages/english.json	/^        "main": {$/;"	o	object:commands.Help.embed
main	configs/languages/polish.json	/^        "main": {$/;"	o	object:commands.Help.embed
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
mention	configs/languages/english.json	/^        "mention": "Big hug for %s",$/;"	s	object:commands.Hug.response
mention	configs/languages/english.json	/^        "mention": "Here's cute doggy for %s",$/;"	s	object:commands.Doggie.response
mention	configs/languages/english.json	/^        "mention": "Here's cute kitty for ya boi %s",$/;"	s	object:commands.Kitty.response
mention	configs/languages/english.json	/^        "mention": "Here's waifu for %s",$/;"	s	object:commands.Waifu.response
mention	configs/languages/english.json	/^        "mention": "Kiss for %s :*",$/;"	s	object:commands.Kiss.response
mention	configs/languages/english.json	/^        "mention": "Pat pat %s",$/;"	s	object:commands.Pet.response
mention	configs/languages/polish.json	/^        "mention": "Masz całusa dla %s",$/;"	s	object:commands.Kiss.response
mention	configs/languages/polish.json	/^        "mention": "Masz glaskanko dla %s",$/;"	s	object:commands.Pet.response
mention	configs/languages/polish.json	/^        "mention": "Masz kotka dla %s",$/;"	s	object:commands.Kitty.response
mention	configs/languages/polish.json	/^        "mention": "Masz pieska dla %s",$/;"	s	object:commands.Doggie.response
mention	configs/languages/polish.json	/^        "mention": "Masz przytulasa dla %s",$/;"	s	object:commands.Hug.response
mention	configs/languages/polish.json	/^        "mention": "Masz waifu dla %s",$/;"	s	object:commands.Waifu.response
message	configs/languages/english.json	/^      "message": "Command you requested does not exist"$/;"	s	object:errors.commandNotFound
message	configs/languages/english.json	/^      "message": "You gave %s command invalid arguments"$/;"	s	object:errors.invalidCommandArguments
message	configs/languages/polish.json	/^      "message": "Komenda którą próbowałeś znaleźć nie istnieje"$/;"	s	object:errors.commandNotFound
message	configs/languages/polish.json	/^      "message": "Podałeś nieprawidłowe argumenty dla komendy %s"$/;"	s	object:errors.invalidCommandArguments
messsageSend	configs/languages/english.json	/^    "messsageSend": "Sending message failed.",$/;"	s	object:errors
messsageSend	configs/languages/polish.json	/^    "messsageSend": "Nie udało się wysłać wiadomości",$/;"	s	object:errors
middleware	commands/8ball.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/doggie.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/help.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/hug.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/kiss.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/kitty.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/language.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/pet.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/ping.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/pinterest.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/stats.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	commands/waifu.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	main.go	/^	middleware "github.com\/Im-Beast\/Gophelper\/middleware"$/;"	P	package:github.com/Im-Beast/Gophelper/middleware
middleware	middleware/permissionChecker.go	/^package middleware$/;"	p
middleware	middleware/rateLimiter.go	/^package middleware$/;"	p
name	configs/languages/english.json	/^        "name": "Name",$/;"	s	object:commands.Help.embed
name	configs/languages/polish.json	/^        "name": "Nazwa",$/;"	s	object:commands.Help.embed
noAliases	configs/languages/english.json	/^        "noAliases": "No aliases"$/;"	s	object:commands.Help.embed
noAliases	configs/languages/polish.json	/^        "noAliases": "Brak aliasów"$/;"	s	object:commands.Help.embed
noArgumentsMessage	configs/languages/english.json	/^      "noArgumentsMessage": "You need to ask me something, dont ya?"$/;"	s	object:commands.8Ball
noArgumentsMessage	configs/languages/polish.json	/^      "noArgumentsMessage": "Musisz sie mnie o cos zapytac"$/;"	s	object:commands.8Ball
noDescription	configs/languages/english.json	/^        "noDescription": "No description specified",$/;"	s	object:commands.Help.embed
noDescription	configs/languages/polish.json	/^        "noDescription": "Brak opisu",$/;"	s	object:commands.Help.embed
noName	configs/languages/english.json	/^        "noName": "No name",$/;"	s	object:commands.Help.embed
noName	configs/languages/polish.json	/^        "noName": "Brak nazwy",$/;"	s	object:commands.Help.embed
noResultsFound	configs/languages/english.json	/^    "noResultsFound": {$/;"	o	object:errors
noResultsFound	configs/languages/polish.json	/^    "noResultsFound": {$/;"	o	object:errors
nonMention	configs/languages/english.json	/^        "nonMention": "Cute doggie for u!"$/;"	s	object:commands.Doggie.response
nonMention	configs/languages/english.json	/^        "nonMention": "Here's a hug for you"$/;"	s	object:commands.Hug.response
nonMention	configs/languages/english.json	/^        "nonMention": "Here's your waifu"$/;"	s	object:commands.Waifu.response
nonMention	configs/languages/english.json	/^        "nonMention": "Kiss for you"$/;"	s	object:commands.Kiss.response
nonMention	configs/languages/english.json	/^        "nonMention": "Look at that kitty i got for you"$/;"	s	object:commands.Kitty.response
nonMention	configs/languages/english.json	/^        "nonMention": "Pat pat pat"$/;"	s	object:commands.Pet.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Masz całusa"$/;"	s	object:commands.Kiss.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Masz kotka"$/;"	s	object:commands.Kitty.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Masz pieska"$/;"	s	object:commands.Doggie.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Masz przytulasa"$/;"	s	object:commands.Hug.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Masz waifu"$/;"	s	object:commands.Waifu.response
nonMention	configs/languages/polish.json	/^        "nonMention": "Pat pat pat"$/;"	s	object:commands.Pet.response
page	configs/languages/english.json	/^      "page": "Page"$/;"	s	object:commands.Help
page	configs/languages/polish.json	/^      "page": "Strona"$/;"	s	object:commands.Help
pets	commands/pet.go	/^var pets = []string{$/;"	v	package:commands
prefix	configs/bot.json	/^  "prefix": {$/;"	o
prefixes	configs/bot.json	/^    "prefixes": ["go"],$/;"	a	object:prefix
rateLimit	configs/languages/english.json	/^    "rateLimit": "You are sending this command too often, try again in %d seconds",$/;"	s	object:errors
rateLimit	configs/languages/polish.json	/^    "rateLimit": "Używasz tej komendy za czesto, sprobuj ponownie za %d sekundy",$/;"	s	object:errors
rateLimiters	middleware/rateLimiter.go	/^var rateLimiters = make(map[string]map[*gophelper.Command]RateLimiter)$/;"	v	package:middleware
registerCategories	main.go	/^func registerCategories() {$/;"	f	package:main
registerCommands	main.go	/^func registerCommands() {$/;"	f	package:main
registerMiddleware	main.go	/^func registerMiddleware() {$/;"	f	package:main
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Doggie
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Hug
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Kiss
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Kitty
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Pet
response	configs/languages/english.json	/^      "response": {$/;"	o	object:commands.Waifu
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Doggie
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Hug
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Kiss
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Kitty
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Pet
response	configs/languages/polish.json	/^      "response": {$/;"	o	object:commands.Waifu
router	main.go	/^var router = gophelper.Router{$/;"	v	package:main
routerMiddleware	internal/router.go	/^var routerMiddleware = make(map[string][]Middleware)$/;"	v	package:gophelper
run	internal/command.go	/^func (cmd *Command) run(context *CommandContext) {$/;"	f	struct:gophelper.Command
title	configs/languages/english.json	/^          "title": "Help",$/;"	s	object:commands.Help.embed.main
title	configs/languages/english.json	/^      "title": "Command not found",$/;"	s	object:errors.commandNotFound
title	configs/languages/english.json	/^      "title": "Invalid command arguments",$/;"	s	object:errors.invalidCommandArguments
title	configs/languages/english.json	/^      "title": "No results found",$/;"	s	object:errors.noResultsFound
title	configs/languages/english.json	/^      "title": "Stats for user %s#%s",$/;"	s	object:commands.Stats
title	configs/languages/polish.json	/^          "title": "Pomoc",$/;"	s	object:commands.Help.embed.main
title	configs/languages/polish.json	/^      "title": "Komenda nie została znaleziona",$/;"	s	object:errors.commandNotFound
title	configs/languages/polish.json	/^      "title": "Nie znaleziono wyników",$/;"	s	object:errors.noResultsFound
title	configs/languages/polish.json	/^      "title": "Nieprawidłowe argumenty dla komendy",$/;"	s	object:errors.invalidCommandArguments
title	configs/languages/polish.json	/^      "title": "Statystyki dla użytkownika %s#%s",$/;"	s	object:commands.Stats
tooFewPermissions	configs/languages/english.json	/^    "tooFewPermissions": "You don't have enough permissions to use this command.",$/;"	s	object:errors
tooFewPermissions	configs/languages/polish.json	/^    "tooFewPermissions": "Nie masz wystarczających permisji by używać tej komendy",$/;"	s	object:errors
usage	configs/languages/english.json	/^        "usage": "Usage",$/;"	s	object:commands.Help.embed
usage	configs/languages/polish.json	/^        "usage": "Sposób użycia",$/;"	s	object:commands.Help.embed
userNotFound	configs/languages/english.json	/^      "userNotFound": "This user either doesn't exist or (s)he's not on this server"$/;"	s	object:commands.Stats
userNotFound	configs/languages/polish.json	/^      "userNotFound": "Ten użytkownik nie istnieje bądź nie jest na tym serwerze"$/;"	s	object:commands.Stats
utils	middleware/permissionChecker.go	/^	utils "github.com\/Im-Beast\/Gophelper\/utils"$/;"	P	package:github.com/Im-Beast/Gophelper/utils
utils	utils/utils.go	/^package utils$/;"	p
waifus	commands/waifu.go	/^var waifus = []string{$/;"	v	package:commands
